version: '3.7'

services:
  nginx:
    image: openresty/openresty:1.19.3.1-3-alpine
    environment:
      - MIGRANTS_HOSTNAME=${MIGRANTS_HOSTNAME}
      - PA_HOSTNAME=${PA_HOSTNAME}
      - NGO_HOSTNAME=${NGO_HOSTNAME}
      - ANALYTIC_HOSTNAME=${ANALYTIC_HOSTNAME}
      - RASA_HOSTNAME=${RASA_HOSTNAME}
      - NGINX_PORT=80
    volumes:
#      - $PWD/nginx/default.conf:/etc/nginx/conf.d/default.conf
#      - ./nginx/default.conf:/etc/nginx/templates/default.conf.template
#      - $PWD/nginx/nginx.conf:/etc/nginx/nginx.conf
      - $PWD/nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf
    ports:
      - "8080:8080"
    networks:
      - micado_net    

  chatbot_en:
    image: rasa/rasa:2.3.1-full
    user: 1000:1000
    container_name: chatbot_en
    env_file:
      - .env
      - prod.env
 #   volumes:
 #     - /home/gioppo/Development/dockerfiles/micado_new/rasa:/app
#    entrypoint: python multibot.py
    command:
#      - python 
#      - micado.py
#      - train
      - run
      - --cors
      - "*"
      - -p
      - "5005"
      - -m
      - rasa/models/micado_en.tar.gz
      - --enable-api
      - --auth-token
      - "${RASA_SECRET}"
    ports:
      - "5005:5005"
    volumes:
      - type: volume
        source: chatbot_data
        # target is the path in the container
        target: /app
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    networks:
      - micado_net

  chatbot_de:
    image: rasa/rasa:2.3.1-full
    user: 1000:1000
    container_name: chatbot_de
    env_file:
      - .env
      - prod.env
 #   volumes:
 #     - /home/gioppo/Development/dockerfiles/micado_new/rasa:/app
#    entrypoint: python multibot.py
    command:
#      - python 
#      - micado.py
#      - train
      - run
      - --cors
      - "*"
      - -p
      - "5005"
      - -m
      - rasa/models/micado_en.tar.gz
      - --enable-api
      - --auth-token
      - "${RASA_SECRET}"
    volumes:
      - type: volume
        source: chatbot_data
        # target is the path in the container
        target: /app
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    networks:
      - micado_net

  action_server:
    image: rasa/rasa:2.3.1-full
    volumes:
      - type: volume
        source: chatbot_action
        # target is the path in the container
        target: /app/actions
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    networks:
      - micado_net

  duckling_server:
    image: rasa/duckling:0.1.6.5
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    networks:
      - micado_net

  micado_db:
    image: groonga/pgroonga:2.2.6-alpine-11-slim
    env_file:
      - .env
      - prod.env
    ports:
      - "5432:5432"
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
      - type: volume
        source: postgres_init
        target: /docker-entrypoint-initdb.d
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    networks:
      - micado_net    

volumes:
  chatbot_data:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: $PWD/rasa
      o: bind
  chatbot_action:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: $PWD/rasa/actions
      o: bind
  postgres_data:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: $PWD/db_data
      o: bind
  postgres_init:
    driver: local
    driver_opts:
      type: none
      # device is the path in the host that has to be absolute
      device: $PWD/db_init
      o: bind
      
networks:
  micado_net:
    driver: bridge
#    external: true
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.24.0.0/16