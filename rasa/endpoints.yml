# This file contains the different endpoints your bot can use.

# Server where the models are pulled from.
# https://rasa.com/docs/rasa/user-guide/running-the-server/#fetching-models-from-a-server/

#models:
#  url: http://my-server.com/models/default_core@latest
#  wait_time_between_pulls:  10   # [optional](default: 100)

# Server which runs your custom actions.
# https://rasa.com/docs/rasa/core/actions/#custom-actions/

action_endpoint:
  url: "http://action_server:5055/webhook"

# Tracker store which is used to store the conversations.
# By default the conversations are stored in memory.
# https://rasa.com/docs/rasa/api/tracker-stores/
tracker_store:
  type: SQL
  dialect: "postgresql" # the dialect used to interact with the db
  url: "micado_db" # (optional) host of the sql db, e.g. "localhost"
  db: ${POSTGRES_DB} # path to your db
  username: ${RASA_DB_USER} # username used for authentication
  password: ${RASA_DB_PASSWORD} # password used for authentication
  query: # optional dictionary to be added as a query string to the connection URL
#      driver: my-driver
#tracker_store:
#    type: redis
#    url: <host of the redis instance, e.g. localhost>
#    port: <port of your redis instance, usually 6379>
#    db: <number of your database within redis, e.g. 0>
#    password: <password used for authentication>

#tracker_store:
#    type: mongod
#    url: <url to your mongo instance, e.g. mongodb://localhost:27017>
#    db: <name of the db within your mongo instance, e.g. rasa>
#    username: <username used for authentication>
#    password: <password used for authentication>

# Event broker which all conversation events should be streamed to.
# https://rasa.com/docs/rasa/api/event-brokers/

#event_broker:
#  url: localhost
#  username: username
#  password: password
#  queue: queue
#event_broker:
#  type: "pika"
#  url: ${RABBITMQ_HOST}
#  username: ${RABBITMQ_USERNAME}
#  password: ${RABBITMQ_PASSWORD}
#  queues:
#    - ${RABBITMQ_QUEUE}
#models:
#  url: "http://rasa-x:5002/api/projects/default/models/tags/production"
#  token: ${RASA_X_TOKEN}
#  wait_time_between_pulls: ${RASA_MODEL_PULL_INTERVAL}
